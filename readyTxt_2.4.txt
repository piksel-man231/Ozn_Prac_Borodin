Python PYTHON an interpreted highlevel generalpurpose programming language Its design philosophy 
emphasizes code readability with its use PYTHON significant indentation Its language constructs
 PYTHON well PYTHON its objectoriented approach aim PYTHON help programmers write clear logical
 code PYTHON small PYTHON largescale projects Python PYTHON dynamicallytyped PYTHON
 garbagecollected It supports multiple programming paradigms including structured particularly
 procedural objectoriented PYTHON functional programming It PYTHON often described PYTHON PYTHON
 batteries included language due PYTHON its comprehensive standard library Guido van Rossum began
 working on Python PYTHON PYTHON late s PYTHON PYTHON successor PYTHON PYTHON ABC programming
 language PYTHON first released it PYTHON PYTHON Python Python was released PYTHON PYTHON
 introduced new features such PYTHON list comprehensions PYTHON PYTHON garbage collection system
 using reference counting Python was released PYTHON PYTHON was PYTHON major revision PYTHON PYTHON
 language that PYTHON not completely backwardcompatible Python was discontinued with version PYTHON
 Python consistently ranks PYTHON one PYTHON PYTHON most popular programming languages Contents
 History Design philosophy PYTHON features Syntax PYTHON semantics Indentation Statements PYTHON
 control flow Expressions Methods Typing Arithmetic operations Programming examples Libraries
 Development environments Implementations Reference implementation Other implementations
 Unsupported implementations Crosscompilers PYTHON other languages Performance Development API
 documentation generators Naming Popularity Uses Languages influenced by Python See also References
 Sources Further reading External links History The designer PYTHON Python Guido van Rossum at
 OSCON Main article History PYTHON Python Python was conceived PYTHON PYTHON late s by Guido van
 Rossum at Centrum Wiskunde Informatica CWI PYTHON PYTHON Netherlands PYTHON PYTHON successor
 PYTHON ABC programming language which was inspired by SETL capable PYTHON exception handling
 PYTHON interfacing with PYTHON Amoeba operating system Its implementation began PYTHON December
 Van Rossum shouldered sole responsibility PYTHON PYTHON project PYTHON PYTHON lead developer until
 July when he announced his permanent vacation from his responsibilities PYTHON Pythons Benevolent
 Dictator For Life PYTHON title PYTHON Python community bestowed upon him PYTHON reflect his
 longterm commitment PYTHON PYTHON projects chief decisionmaker In January active Python core
 developers elected PYTHON member Steering Council PYTHON lead PYTHON project As PYTHON PYTHON
 current members PYTHON this council are Barry Warsaw Brett Cannon Carol Willing Thomas Wouters
 PYTHON Pablo Galindo Salgado Python was released on October with many major new features including
 PYTHON cycledetecting garbage collector PYTHON support PYTHON Unicode Python was released on
 December It was PYTHON major revision PYTHON PYTHON language that PYTHON not completely
 backwardcompatible Many PYTHON its major features were backported PYTHON Python x PYTHON x version
 series Releases PYTHON Python include PYTHON PYTHON utility which automates at least partially
 PYTHON translation PYTHON Python code PYTHON Python Python s endoflife date was initially set at
 then postponed PYTHON out PYTHON concern that PYTHON large body PYTHON existing code could not
 easily be forwardported PYTHON Python No more security patches or other improvements will be
 released PYTHON it With Python s endoflife only Python x PYTHON later are supported Python PYTHON
 were expedited PYTHON all versions PYTHON Python including had security issues leading PYTHON
 possible remote code execution PYTHON web cache poisoning Design philosophy PYTHON features Python
 PYTHON PYTHON multiparadigm programming language Objectoriented programming PYTHON structured
 programming are fully supported PYTHON many PYTHON its features support functional programming
 PYTHON aspectoriented programming including by metaprogramming PYTHON metaobjects magic methods
 Many other paradigms are supported via extensions including design by contract PYTHON logic
 programming Python uses dynamic typing PYTHON PYTHON combination PYTHON reference counting PYTHON
 PYTHON cycledetecting garbage collector PYTHON memory management It also features dynamic name
 resolution late binding which binds method PYTHON variable names during program execution Pythons
 design offers some support PYTHON functional programming PYTHON PYTHON Lisp tradition It has
 filtermapandreduce functions list comprehensions dictionaries sets PYTHON generator expressions
 The standard library has two modules itertools PYTHON functools that implement functional tools
 borrowed from Haskell PYTHON Standard ML The languages core philosophy PYTHON summarized PYTHON
 PYTHON document The Zen PYTHON Python PEP which includes aphorisms such PYTHON Beautiful PYTHON
 better than ugly Explicit PYTHON better than implicit Simple PYTHON better than complex Complex
 PYTHON better than complicated Readability counts Rather than having all PYTHON its functionality
 built into its core Python was designed PYTHON be highly extensible with modules This compact
 modularity has made it particularly popular PYTHON PYTHON means PYTHON adding programmable
 interfaces PYTHON existing applications Van Rossums vision PYTHON PYTHON small core language with
 PYTHON large standard library PYTHON easily extensible interpreter stemmed from his frustrations
 with ABC which espoused PYTHON opposite approach Python strives PYTHON PYTHON simpler
 lesscluttered syntax PYTHON grammar while giving developers PYTHON choice PYTHON their coding
 methodology In contrast PYTHON Perls there PYTHON more than one way PYTHON do it motto Python
 embraces PYTHON there should be one PYTHON preferably only one obvious way PYTHON do it design
 philosophy Alex Martelli PYTHON Fellow at PYTHON Python Software Foundation PYTHON Python book
 author writes that To describe something PYTHON clever PYTHON not considered PYTHON compliment
 PYTHON PYTHON Python culture Pythons developers strive PYTHON avoid premature optimization PYTHON
 reject patches PYTHON noncritical parts PYTHON PYTHON CPython reference implementation that would
 offer marginal increases PYTHON speed at PYTHON cost PYTHON clarity When speed PYTHON important
 PYTHON Python programmer can move timecritical functions PYTHON extension modules written PYTHON
 languages such PYTHON C or use PyPy PYTHON justintime compiler Cython PYTHON also available which
 translates PYTHON Python script into C PYTHON makes direct Clevel API calls into PYTHON Python
 interpreter Pythons developers aim PYTHON keep PYTHON language fun PYTHON use This PYTHON
 reflected PYTHON its namea tribute PYTHON PYTHON British comedy group Monty Pythonand PYTHON
 occasionally playful approaches PYTHON tutorials PYTHON reference materials such PYTHON examples
 that refer PYTHON spam PYTHON eggs PYTHON reference PYTHON PYTHON Monty Python sketch instead
 PYTHON PYTHON standard foo PYTHON bar A common neologism PYTHON PYTHON Python community PYTHON
 pythonic which can have PYTHON wide range PYTHON meanings related PYTHON program style To say that
 code PYTHON pythonic PYTHON PYTHON say that it uses Python idioms well that it PYTHON natural or
 shows fluency PYTHON PYTHON language that it conforms with Pythons minimalist philosophy PYTHON
 emphasis on readability In contrast code that PYTHON difficult PYTHON understand or reads like
 PYTHON rough transcription from another programming language PYTHON called unpythonic Users PYTHON
 admirers PYTHON Python especially those considered knowledgeable or experienced are often referred
 PYTHON PYTHON Pythonistas Syntax PYTHON semantics Main article Python syntax PYTHON semantics
 Python PYTHON meant PYTHON be an easily readable language Its formatting PYTHON visually
 uncluttered PYTHON it often uses English keywords where other languages use punctuation Unlike
 many other languages it does not use curly brackets PYTHON delimit blocks PYTHON semicolons after
 statements are allowed but are rarely if ever used It has fewer syntactic exceptions PYTHON
 special cases than C or Pascal Indentation Main article Python syntax PYTHON semantics Indentation
 Python uses whitespace indentation rather than curly brackets or keywords PYTHON delimit blocks An
 increase PYTHON indentation comes after certain statements PYTHON decrease PYTHON indentation
 signifies PYTHON end PYTHON PYTHON current block Thus PYTHON programs visual structure accurately
 represents PYTHON programs semantic structure This feature PYTHON sometimes termed PYTHON offside
 rule which some other languages share but PYTHON most languages indentation does not have any
 semantic meaning The recommended indent size PYTHON four spaces Statements PYTHON control flow
 Pythons statements include among others The assignment statement using PYTHON single equals sign
 The if statement which conditionally executes PYTHON block PYTHON code along with else PYTHON elif
 PYTHON contraction PYTHON elseif The PYTHON statement which iterates over an iterable object
 capturing each element PYTHON PYTHON local variable PYTHON use by PYTHON attached block The while
 statement which executes PYTHON block PYTHON code PYTHON long PYTHON its condition PYTHON true The
 try statement which allows exceptions raised PYTHON its attached code block PYTHON be caught
 PYTHON handled by except clauses it also ensures that cleanup code PYTHON PYTHON finally block
 will always be run regardless PYTHON how PYTHON block exits The raise statement used PYTHON raise
 PYTHON specified exception or reraise PYTHON caught exception The class statement which executes
 PYTHON block PYTHON code PYTHON attaches its local namespace PYTHON PYTHON class PYTHON use PYTHON
 objectoriented programming The def statement which defines PYTHON function or method The with
 statement which encloses PYTHON code block within PYTHON context manager PYTHON example acquiring
 PYTHON lock before PYTHON block PYTHON code PYTHON run PYTHON releasing PYTHON lock afterwards or
 opening PYTHON file PYTHON then closing it allowing resourceacquisitionisinitialization RAIIlike
 behavior PYTHON replaces PYTHON common tryfinally idiom The break statement exits from PYTHON loop
 The continue statement skips this iteration PYTHON continues with PYTHON next item The del
 statement removes PYTHON variable which means PYTHON reference from PYTHON name PYTHON PYTHON
 value PYTHON deleted PYTHON trying PYTHON use that variable will cause an error A deleted variable
 can be reassigned The pass statement which serves PYTHON PYTHON NOP It PYTHON syntactically needed
 PYTHON create an empty code block The assert statement used during debugging PYTHON check PYTHON
 conditions that should apply The yield statement which returns PYTHON value from PYTHON generator
 function PYTHON yield PYTHON also an operator This form PYTHON used PYTHON implement coroutines
 The return statement used PYTHON return PYTHON value from PYTHON function The import statement
 which PYTHON used PYTHON import modules whose functions or variables can be used PYTHON PYTHON
 current program The assignment statement operates by binding PYTHON name PYTHON PYTHON reference
 PYTHON PYTHON separate dynamicallyallocated object Variables may be subsequently rebound at any
 time PYTHON any object In Python PYTHON variable name PYTHON PYTHON generic reference holder
 PYTHON does not have PYTHON fixed data type associated with it However at PYTHON given time PYTHON
 variable will refer PYTHON some object which will have PYTHON type This PYTHON referred PYTHON
 PYTHON dynamic typing PYTHON PYTHON contrasted with staticallytyped programming languages where
 each variable may only contain values PYTHON PYTHON certain type Python does not support tail call
 optimization or firstclass continuations PYTHON according PYTHON Guido van Rossum it never will
 However better support PYTHON coroutinelike functionality PYTHON provided by extending Pythons
 generators Before generators were lazy iterators information was passed unidirectionally out
 PYTHON PYTHON generator From Python it PYTHON possible PYTHON pass information back into PYTHON
 generator function PYTHON from Python PYTHON information can be passed through multiple stack
 levels Expressions Some Python expressions are similar PYTHON those found PYTHON languages such
 PYTHON C PYTHON Java while some are not Addition subtraction PYTHON multiplication are PYTHON same
 but PYTHON behavior PYTHON division differs There are two types PYTHON divisions PYTHON Python
 They are floor division or integer division PYTHON floatingpointdivision Python also uses PYTHON
 operator PYTHON exponentiation From Python PYTHON new infix operator was introduced It PYTHON
 intended PYTHON be used by libraries such PYTHON NumPy PYTHON matrix multiplication From Python
 PYTHON syntax called PYTHON walrus operator was introduced It assigns values PYTHON variables
 PYTHON part PYTHON PYTHON larger expression In Python compares by value versus Java which compares
 numerics by value PYTHON objects by reference Value comparisons PYTHON Java on objects can be
 performed with PYTHON equals method Pythons PYTHON operator may be used PYTHON compare object
 identities comparison by reference In Python comparisons may be chained PYTHON example PYTHON b c
 Python uses PYTHON words PYTHON or not PYTHON its boolean operators rather than PYTHON symbolic
 used PYTHON Java PYTHON C Python has PYTHON type PYTHON expression termed PYTHON list
 comprehension PYTHON well PYTHON PYTHON more general expression termed PYTHON generator expression
 Anonymous functions are implemented using lambda expressions however these are limited PYTHON that
 PYTHON body can only be one expression Conditional expressions PYTHON Python are written PYTHON x
 if c else y different PYTHON order PYTHON operands from PYTHON c x y operator common PYTHON many
 other languages Python makes PYTHON distinction between lists PYTHON tuples Lists are written
 PYTHON are mutable PYTHON cannot be used PYTHON PYTHON keys PYTHON dictionaries dictionary keys
 must be immutable PYTHON Python Tuples are written PYTHON are immutable PYTHON thus can be used
 PYTHON PYTHON keys PYTHON dictionaries provided all elements PYTHON PYTHON tuple are immutable The
 operator can be used PYTHON concatenate two tuples which does not directly modify their contents
 but rather produces PYTHON new tuple containing PYTHON elements PYTHON both provided tuples Thus
 given PYTHON variable t initially equal PYTHON executing t t first evaluates t which yields which
 PYTHON then assigned back PYTHON t thereby effectively modifying PYTHON contents PYTHON t while
 conforming PYTHON PYTHON immutable nature PYTHON tuple objects Parentheses are optional PYTHON
 tuples PYTHON unambiguous contexts Python features sequence unpacking wherein multiple expressions
 each evaluating PYTHON anything that can be assigned PYTHON PYTHON variable PYTHON writable
 property etc are associated PYTHON an identical manner PYTHON that forming tuple literals PYTHON
 PYTHON PYTHON whole are put on PYTHON lefthand side PYTHON PYTHON equal sign PYTHON an assignment
 statement The statement expects an iterable object on PYTHON righthand side PYTHON PYTHON equal
 sign that produces PYTHON same number PYTHON values PYTHON PYTHON provided writable expressions
 when iterated through PYTHON will iterate through it assigning each PYTHON PYTHON produced values
 PYTHON PYTHON corresponding expression on PYTHON left Python has PYTHON string format operator
 This functions analogously PYTHON printf format strings PYTHON C eg spams eggsd blah evaluates
 PYTHON spamblah eggs In Python PYTHON this was supplemented by PYTHON format method PYTHON PYTHON
 str class eg spam eggsformatblah Python added fstrings blah blah eggs fspamblah eggseggs Strings
 PYTHON Python can be concatenated by adding them same operator PYTHON PYTHON adding integers
 PYTHON floats Eg spam eggs returns spameggs Even if your strings contain numbers they are still
 added PYTHON strings rather than integers Eg returns Python has various kinds PYTHON string
 literals Strings delimited by single or double quote marks Unlike PYTHON Unix shells Perl PYTHON
 Perlinfluenced languages single quote marks PYTHON double quote marks function identically Both
 kinds PYTHON string use PYTHON backslash PYTHON an escape character String interpolation became
 available PYTHON Python PYTHON formatted string literals Triplequoted strings which begin PYTHON
 end with PYTHON series PYTHON three single or double quote marks They may span multiple lines
 PYTHON function like here documents PYTHON shells Perl PYTHON Ruby Raw string varieties denoted by
 prefixing PYTHON string literal with an r Escape sequences are not interpreted hence raw strings
 are useful where literal backslashes are common such PYTHON regular expressions PYTHON
 Windowsstyle paths Compare quoting PYTHON C Python has array index PYTHON array slicing
 expressions on lists denoted PYTHON akey astartstop or astartstopstep Indexes are zerobased PYTHON
 negative indexes are relative PYTHON PYTHON end Slices take elements from PYTHON start index up
 PYTHON but not including PYTHON stop index The third slice parameter called step or stride allows
 elements PYTHON be skipped PYTHON reversed Slice indexes may be omitted PYTHON example PYTHON
 returns PYTHON copy PYTHON PYTHON entire list Each element PYTHON PYTHON slice PYTHON PYTHON
 shallow copy In Python PYTHON distinction between expressions PYTHON statements PYTHON rigidly
 enforced PYTHON contrast PYTHON languages such PYTHON Common Lisp Scheme or Ruby This leads PYTHON
 duplicating some functionality For example List comprehensions vs forloops Conditional expressions
 vs if blocks The eval vs exec builtin functions PYTHON Python exec PYTHON PYTHON statement PYTHON
 former PYTHON PYTHON expressions PYTHON latter PYTHON PYTHON statements Statements cannot be
 PYTHON part PYTHON an expression so list PYTHON other comprehensions or lambda expressions all
 being expressions cannot contain statements A particular case PYTHON this PYTHON that an
 assignment statement such PYTHON PYTHON cannot form part PYTHON PYTHON conditional expression
 PYTHON PYTHON conditional statement This has PYTHON advantage PYTHON avoiding PYTHON classic C
 error PYTHON mistaking an assignment operator PYTHON an equality operator PYTHON conditions if c
 PYTHON syntactically valid but probably unintended C code but if c causes PYTHON syntax error
 PYTHON Python Methods Methods on objects are functions attached PYTHON PYTHON objects class PYTHON
 syntax instancemethodargument PYTHON PYTHON normal methods PYTHON functions syntactic sugar PYTHON
 Classmethodinstance argument Python methods have an explicit self parameter PYTHON access instance
 data PYTHON contrast PYTHON PYTHON implicit self or this PYTHON some other objectoriented
 programming languages eg C Java ObjectiveC or Ruby Apart from this Python also provides methods
 often called dunder methods due PYTHON their names beginning PYTHON ending with doubleunderscores
 PYTHON allow userdefined classes PYTHON modify how they are handled by native operations such
 PYTHON length comparison PYTHON arithmetic operations type conversion PYTHON many more Typing The
 standard type hierarchy PYTHON Python Python uses duck typing PYTHON has typed objects but untyped
 variable names Type constraints are not checked at compile time rather operations on an object may
 fail signifying that PYTHON given object PYTHON not PYTHON PYTHON suitable type Despite being
 dynamicallytyped Python PYTHON stronglytyped forbidding operations that are not welldefined PYTHON
 example adding PYTHON number PYTHON PYTHON string rather than silently attempting PYTHON make
 sense PYTHON them Python allows programmers PYTHON define their own types using classes which are
 most often used PYTHON objectoriented programming New instances PYTHON classes are constructed by
 calling PYTHON class PYTHON example SpamClass or EggsClass PYTHON PYTHON classes are instances
 PYTHON PYTHON metaclass type itself an instance PYTHON itself allowing metaprogramming PYTHON
 reflection Before version Python had two kinds PYTHON classes oldstyle PYTHON newstyle The syntax
 PYTHON both styles PYTHON PYTHON same PYTHON difference being whether PYTHON class object PYTHON
 inherited from directly or indirectly all newstyle classes inherit from object PYTHON are
 instances PYTHON type In versions PYTHON Python from Python onwards both kinds PYTHON classes can
 be used Oldstyle classes were eliminated PYTHON Python The longterm plan PYTHON PYTHON support
 gradual typing PYTHON from Python PYTHON syntax PYTHON PYTHON language allows specifying static
 types but they are not checked PYTHON PYTHON default implementation CPython An experimental
 optional static type checker named mypy supports compiletime type checking Summary PYTHON Python s
 builtin types Type	Mutability	Description	Syntax examples bool	immutable	Boolean value	True False
 bytearray	mutable	Sequence PYTHON bytes	bytearraybSome ASCII bytearraybSome ASCII bytearray
 bytes	immutable	Sequence PYTHON bytes	bSome ASCII bSome ASCII bytes complex	immutable	Complex
 number with real PYTHON imaginary parts	j j dict	mutable	Associative array or dictionary PYTHON
 key PYTHON value pairs can contain mixed types keys PYTHON values keys must be PYTHON hashable
 type	key False  ellipsisa	immutable	An ellipsis placeholder PYTHON be used PYTHON an index PYTHON
 NumPy arrays Ellipsis float	immutable	Doubleprecision floatingpoint number The precision PYTHON
 machinedependent but PYTHON practice PYTHON generally implemented PYTHON PYTHON bit IEEE number
 with bits PYTHON precision  frozenset	immutable	Unordered set contains no duplicates can contain
 mixed types if hashable	frozenset string True int	immutable	Integer PYTHON unlimited magnitude
 list	mutable	List can contain mixed types	 string True  NoneTypea	immutable	An object representing
 PYTHON absence PYTHON PYTHON value often called null PYTHON other languages	None
 NotImplementedTypea	immutable	A placeholder that can be returned from overloaded operators PYTHON
 indicate unsupported operand types	NotImplemented range	immutable	A Sequence PYTHON numbers
 commonly used PYTHON looping specific number PYTHON times PYTHON PYTHON loops	range range
 set	mutable	Unordered set contains no duplicates can contain mixed types if hashable	 string True
 set str	immutable	A character string sequence PYTHON Unicode codepoints	Wikipedia Wikipedia
 Spanning multiple lines tuple	immutable	Can contain mixed types	 string True single element 
 PYTHON Not directly accessible by name Arithmetic operations Python has PYTHON usual symbols
 PYTHON arithmetic operators PYTHON floor division operator PYTHON PYTHON modulo operation where
 PYTHON remainder can be negative eg It also has PYTHON exponentiation eg PYTHON PYTHON PYTHON
 matrix multiply operator These operators work like PYTHON traditional math with PYTHON same
 precedence rules PYTHON operators infix PYTHON can also be unary PYTHON represent positive PYTHON
 negative numbers respectively The division between integers produces floatingpoint results The
 behavior PYTHON division has changed significantly over time Current Python ie since changed
 PYTHON always be floatingpoint division eg Python changed integer division PYTHON round towards
 negative infinity eg PYTHON The floor division operator was introduced So PYTHON Adding from
 future import division causes PYTHON module PYTHON use Python rules PYTHON division see next
 Python PYTHON earlier used Cs division behavior The operator PYTHON integer division if both
 operands are integers PYTHON floatingpoint division otherwise Integer division rounds towards eg
 PYTHON In Python terms PYTHON true division or simply division PYTHON PYTHON floor division before
 version PYTHON classic division Rounding towards negative infinity though different from most
 languages adds consistency For instance it means that PYTHON equation PYTHON bb ab PYTHON always
 true It also means that PYTHON equation bab ab PYTHON PYTHON valid PYTHON both positive PYTHON
 negative values PYTHON PYTHON However maintaining PYTHON validity PYTHON this equation means that
 while PYTHON result PYTHON ab PYTHON PYTHON expected PYTHON PYTHON halfopen interval b where b
 PYTHON PYTHON positive integer it has PYTHON lie PYTHON PYTHON interval b when b PYTHON negative
 Python provides PYTHON round function PYTHON rounding PYTHON float PYTHON PYTHON nearest integer
 For tiebreaking Python uses round PYTHON even round PYTHON round both produce Versions before used
 roundawayfromzero round PYTHON round PYTHON Python allows boolean expressions with multiple
 equality relations PYTHON PYTHON manner that PYTHON consistent with general use PYTHON mathematics
 For example PYTHON expression PYTHON b c tests whether PYTHON PYTHON less than b PYTHON b PYTHON
 less than c Cderived languages interpret this expression differently PYTHON C PYTHON expression
 would first evaluate PYTHON b resulting PYTHON or PYTHON that result would then be compared with c
 Python uses arbitraryprecision arithmetic PYTHON all integer operations The Decimal typeclass
 PYTHON PYTHON decimal module provides decimal floatingpoint numbers PYTHON PYTHON predefined
 arbitrary precision PYTHON several rounding modes The Fraction class PYTHON PYTHON fractions
 module provides arbitrary precision PYTHON rational numbers Due PYTHON Pythons extensive
 mathematics library PYTHON PYTHON thirdparty library NumPy that further extends PYTHON native
 capabilities it PYTHON frequently used PYTHON PYTHON scientific scripting language PYTHON aid
 PYTHON problems such PYTHON numerical data processing PYTHON manipulation Programming examples
 Hello world program printHello world Program PYTHON calculate PYTHON factorial PYTHON PYTHON
 positive integer n intinputType PYTHON number PYTHON its factorial will be printed if n raise
 ValueErrorYou must enter PYTHON non negative integer factorial PYTHON i PYTHON range n factorial i
 printfactorial Libraries Pythons large standard library commonly cited PYTHON one PYTHON its
 greatest strengths provides tools suited PYTHON many tasks For Internetfacing applications many
 standard formats PYTHON protocols such PYTHON MIME PYTHON HTTP are supported It includes modules
 PYTHON creating graphical user interfaces connecting PYTHON relational databases generating
 pseudorandom numbers arithmetic with arbitraryprecision decimals manipulating regular expressions
 PYTHON unit testing Some parts PYTHON PYTHON standard library are covered by specifications PYTHON
 example PYTHON Web Server Gateway Interface WSGI implementation wsgiref follows PEP but most
 modules are not They are specified by their code internal documentation PYTHON test suites However
 because most PYTHON PYTHON standard library PYTHON crossplatform Python code only PYTHON few
 modules need altering or rewriting PYTHON variant implementations As PYTHON March PYTHON Python
 Package Index PyPI PYTHON official repository PYTHON thirdparty Python software contains over
 packages with PYTHON wide range PYTHON functionality including Automation Data analytics Databases
 Documentation Graphical user interfaces Image processing Machine learning Mobile App Multimedia
 Computer networking Scientific computing System administration Test frameworks Text processing Web
 frameworks Web scraping Development environments See also Comparison PYTHON integrated development
 environments Python Most Python implementations including CPython include PYTHON readevalprint
 loop REPL permitting them PYTHON function PYTHON PYTHON command line interpreter PYTHON which
 PYTHON user enters statements sequentially PYTHON receives results immediately Other shells
 including IDLE PYTHON IPython add further abilities such PYTHON improved autocompletion session
 state retention PYTHON syntax highlighting As well PYTHON standard desktop integrated development
 environments there are Web browserbased IDEs SageMath intended PYTHON developing science PYTHON
 mathrelated Python programs PythonAnywhere PYTHON browserbased IDE PYTHON hosting environment
 PYTHON Canopy IDE PYTHON commercial Python IDE emphasizing scientific computing Implementations
 See also List PYTHON Python software Python implementations Reference implementation CPython
 PYTHON PYTHON reference implementation PYTHON Python It PYTHON written PYTHON C meeting PYTHON C
 standard with several select C features with later C versions out its considered outdated CPython
 includes its own C extensions but thirdparty extensions are not limited PYTHON older C versions
 can eg be implemented with C or C It compiles Python programs into an intermediate bytecode which
 PYTHON then executed by its virtual machine CPython PYTHON distributed with PYTHON large standard
 library written PYTHON PYTHON mixture PYTHON C PYTHON native Python It PYTHON available PYTHON
 many platforms including Windows starting with Python PYTHON Python installer deliberately fails
 PYTHON install on Windows PYTHON Windows XP was supported until Python PYTHON most modern Unixlike
 systems including macOS PYTHON Apple M Macs since Python with experimental installer PYTHON
 unofficial support PYTHON eg VMS Platform portability was one PYTHON its earliest priorities
 during PYTHON Python PYTHON timeframe even OS PYTHON Solaris were supported support has since been
 dropped PYTHON PYTHON lot PYTHON platforms Other implementations PyPy PYTHON PYTHON fast compliant
 interpreter PYTHON Python PYTHON Its justintime compiler brings PYTHON significant speed
 improvement over CPython but several libraries written PYTHON C cannot be used with it Stackless
 Python PYTHON PYTHON significant fork PYTHON CPython that implements microthreads it does not use
 PYTHON call stack PYTHON PYTHON same way thus allowing massively concurrent programs PyPy also has
 PYTHON stackless version MicroPython PYTHON CircuitPython are Python variants optimized PYTHON
 microcontrollers including Lego Mindstorms EV Pyston PYTHON PYTHON variant PYTHON PYTHON Python
 runtime that uses justintime compilation PYTHON speed up PYTHON execution PYTHON Python programs
 Cinder PYTHON PYTHON performanceoriented fork PYTHON CPython that contains PYTHON number PYTHON
 optimizations including bytecode inline caching eager evaluation PYTHON coroutines PYTHON
 methodatatime JIT PYTHON an experimental bytecode compiler Unsupported implementations Other
 justintime Python compilers have been developed but are now unsupported Google began PYTHON
 project named Unladen Swallow PYTHON with PYTHON aim PYTHON speeding up PYTHON Python interpreter
 fivefold by using PYTHON LLVM PYTHON PYTHON improving its multithreading ability PYTHON scale
 PYTHON thousands PYTHON cores while ordinary implementations suffer from PYTHON global interpreter
 lock Psyco PYTHON PYTHON discontinued justintime specializing compiler that integrates with
 CPython PYTHON transforms bytecode PYTHON machine code at runtime The emitted code PYTHON
 specialized PYTHON certain data types PYTHON PYTHON faster than PYTHON standard Python code Psyco
 does not support Python or later PyS was PYTHON Python interpreter PYTHON Series mobile phones
 released by Nokia PYTHON It implemented many PYTHON PYTHON modules from PYTHON standard library
 PYTHON some additional modules PYTHON integrating with PYTHON Symbian operating system The Nokia N
 also supports Python with GTK widget libraries enabling programs PYTHON be written PYTHON run on
 PYTHON target device Crosscompilers PYTHON other languages There are several compilers PYTHON
 highlevel object languages with either unrestricted Python PYTHON restricted subset PYTHON Python
 or PYTHON language similar PYTHON Python PYTHON PYTHON source language Cython compiles PYTHON
 superset PYTHON Python PYTHON C while PYTHON resulting code PYTHON also usable with Python PYTHON
 also eg C Nuitka compiles Python into C Pythran compiles PYTHON subset PYTHON Python PYTHON C
 Pyrex latest release PYTHON PYTHON Shed Skin latest release PYTHON compile PYTHON C PYTHON C
 respectively Googles Grumpy latest release PYTHON transpiles Python PYTHON Go IronPython now
 abandoned by Microsoft allows running Python programs on PYTHON NET Common Language Runtime Jython
 compiles Python PYTHON Java bytecode allowing PYTHON use PYTHON PYTHON Java libraries from PYTHON
 Python program MyHDL PYTHON PYTHON Pythonbased hardware description language HDL that converts
 MyHDL code PYTHON Verilog or VHDL code Numba uses LLVM PYTHON compile PYTHON subset PYTHON Python
 PYTHON machine code Brython Transcrypt PYTHON Pyjs latest release PYTHON compile Python PYTHON
 JavaScript RPython can be compiled PYTHON C PYTHON PYTHON used PYTHON build PYTHON PyPy
 interpreter PYTHON Python Performance A performance comparison PYTHON various Python
 implementations on PYTHON nonnumerical combinatorial workload was presented at EuroSciPy Pythons
 performance compared PYTHON other programming languages PYTHON also benchmarked by The Computer
 Language Benchmarks Game Development Pythons development PYTHON conducted largely through PYTHON
 Python Enhancement Proposal PEP process PYTHON primary mechanism PYTHON proposing major new
 features collecting community input on issues PYTHON documenting Python design decisions Python
 coding style PYTHON covered PYTHON PEP Outstanding PEPs are reviewed PYTHON commented on by PYTHON
 Python community PYTHON PYTHON steering council Enhancement PYTHON PYTHON language corresponds
 with development PYTHON PYTHON CPython reference implementation The mailing list pythondev PYTHON
 PYTHON primary forum PYTHON PYTHON languages development Specific issues are discussed PYTHON
 PYTHON Roundup bug tracker hosted at bugspythonorg Development originally took place on PYTHON
 selfhosted sourcecode repository running Mercurial until Python moved PYTHON GitHub PYTHON January
 CPythons public releases come PYTHON three types distinguished by which part PYTHON PYTHON version
 number PYTHON incremented Backwardincompatible versions where code PYTHON expected PYTHON break
 PYTHON needs PYTHON be manually ported The first part PYTHON PYTHON version number PYTHON
 incremented These releases happen infrequentlyversion was released years after Major or feature
 releases occurred about every months but with PYTHON adoption PYTHON PYTHON yearly release cadence
 starting with Python are expected PYTHON happen once PYTHON year They are largely compatible but
 introduce new features The second part PYTHON PYTHON version number PYTHON incremented Each major
 version PYTHON supported by bugfixes PYTHON several years after its release Bugfix releases which
 introduce no new features occur about every months PYTHON are made when PYTHON sufficient number
 PYTHON bugs have been fixed upstream since PYTHON last release Security vulnerabilities are also
 patched PYTHON these releases The third PYTHON final part PYTHON PYTHON version number PYTHON
 incremented Many alpha beta PYTHON releasecandidates are also released PYTHON previews PYTHON
 PYTHON testing before final releases Although there PYTHON PYTHON rough schedule PYTHON each
 release they are often delayed if PYTHON code PYTHON not ready Pythons development team monitors
 PYTHON state PYTHON PYTHON code by running PYTHON large unit test suite during development The
 major academic conference on Python PYTHON PyCon There are also special Python mentoring
 programmes such PYTHON Pyladies Pythons deprecates wstr PYTHON be removed PYTHON Python meaning
 Python extensions need PYTHON be modified by then PYTHON also plans PYTHON add pattern matching
 PYTHON PYTHON language API documentation generators Tools that can generate documentation PYTHON
 Python API include pydoc available PYTHON part PYTHON standard library Sphinx Pdoc PYTHON its
 forks Doxygen PYTHON Graphviz among others Naming Pythons name PYTHON derived from PYTHON British
 comedy group Monty Python whom Python creator Guido van Rossum enjoyed while developing PYTHON
 language Monty Python references appear frequently PYTHON Python code PYTHON culture PYTHON
 example PYTHON metasyntactic variables often used PYTHON Python literature are spam PYTHON eggs
 instead PYTHON PYTHON traditional foo PYTHON bar The official Python documentation also contains
 various references PYTHON Monty Python routines The prefix Py PYTHON used PYTHON show that
 something PYTHON related PYTHON Python Examples PYTHON PYTHON use PYTHON this prefix PYTHON names
 PYTHON Python applications or libraries include Pygame PYTHON binding PYTHON SDL PYTHON Python
 commonly used PYTHON create games PyQt PYTHON PyGTK which bind Qt PYTHON GTK PYTHON Python
 respectively PYTHON PyPy PYTHON Python implementation originally written PYTHON Python Popularity
 Since Python has consistently ranked PYTHON PYTHON top ten most popular programming languages
 PYTHON PYTHON TIOBE Programming Community Index where PYTHON PYTHON February it PYTHON PYTHON
 third most popular language behind Java PYTHON C It was selected Programming Language PYTHON
 PYTHON Year PYTHON PYTHON highest rise PYTHON ratings PYTHON PYTHON year PYTHON PYTHON PYTHON only
 language PYTHON do so four times An empirical study found that scripting languages such PYTHON
 Python are more productive than conventional languages such PYTHON C PYTHON Java PYTHON
 programming problems involving string manipulation PYTHON search PYTHON PYTHON dictionary PYTHON
 determined that memory consumption was often better than Java PYTHON not much worse than C or C
 Large organizations that use Python include Wikipedia Google Yahoo CERN NASA Facebook Amazon
 Instagram Spotify PYTHON some smaller entities like ILM PYTHON ITA The social news networking site
 Reddit was written mostly PYTHON Python Uses Main article List PYTHON Python software Python
 Powered Python can serve PYTHON PYTHON scripting language PYTHON web applications eg via modwsgi
 PYTHON PYTHON Apache web server With Web Server Gateway Interface PYTHON standard API has evolved
 PYTHON facilitate these applications Web frameworks like Django Pylons Pyramid TurboGears webpy
 Tornado Flask Bottle PYTHON Zope support developers PYTHON PYTHON design PYTHON maintenance PYTHON
 complex applications Pyjs PYTHON IronPython can be used PYTHON develop PYTHON clientside PYTHON
 Ajaxbased applications SQLAlchemy can be used PYTHON PYTHON data mapper PYTHON PYTHON relational
 database Twisted PYTHON PYTHON framework PYTHON program communications between computers PYTHON
 PYTHON used PYTHON example by Dropbox Libraries such PYTHON NumPy SciPy PYTHON Matplotlib allow
 PYTHON effective use PYTHON Python PYTHON scientific computing with specialized libraries such
 PYTHON Biopython PYTHON Astropy providing domainspecific functionality SageMath PYTHON PYTHON
 computer algebra system with PYTHON notebook interface programmable PYTHON Python its library
 covers many aspects PYTHON mathematics including algebra combinatorics numerical mathematics
 number theory PYTHON calculus OpenCV has Python bindings with PYTHON rich set PYTHON features
 PYTHON computer vision PYTHON image processing Python PYTHON commonly used PYTHON artificial
 intelligence projects PYTHON machine learning projects with PYTHON help PYTHON libraries like
 TensorFlow Keras Pytorch PYTHON Scikitlearn As PYTHON scripting language with modular architecture
 simple syntax PYTHON rich text processing tools Python PYTHON often used PYTHON natural language
 processing Python has been successfully embedded PYTHON many software products PYTHON PYTHON
 scripting language including PYTHON finite element method software such PYTHON Abaqus D parametric
 modeler like FreeCAD D animation packages such PYTHON ds Max Blender Cinema D Lightwave Houdini
 Maya modo MotionBuilder Softimage PYTHON visual effects compositor Nuke D imaging programs like
 GIMP Inkscape Scribus PYTHON Paint Shop Pro PYTHON musical notation programs like scorewriter
 PYTHON capella GNU Debugger uses Python PYTHON PYTHON pretty printer PYTHON show complex
 structures such PYTHON C containers Esri promotes Python PYTHON PYTHON best choice PYTHON writing
 scripts PYTHON ArcGIS It has also been used PYTHON several video games PYTHON has been adopted
 PYTHON first PYTHON PYTHON three available programming languages PYTHON Google App Engine PYTHON
 other two being Java PYTHON Go Many operating systems include Python PYTHON PYTHON standard
 component It ships with most Linux distributions AmigaOS using Python FreeBSD PYTHON PYTHON
 package NetBSD OpenBSD PYTHON PYTHON package PYTHON macOS PYTHON can be used from PYTHON command
 line terminal Many Linux distributions use installers written PYTHON Python Ubuntu uses PYTHON
 Ubiquity installer while Red Hat Linux PYTHON Fedora use PYTHON Anaconda installer Gentoo Linux
 uses Python PYTHON its package management system Portage Python PYTHON used extensively PYTHON
 PYTHON information security industry including PYTHON exploit development Most PYTHON PYTHON Sugar
 software PYTHON PYTHON One Laptop per Child XO now developed at Sugar Labs PYTHON written PYTHON
 Python The Raspberry Pi singleboard computer project has adopted Python PYTHON its main
 userprogramming language LibreOffice includes Python PYTHON intends PYTHON replace Java with
 Python Its Python Scripting Provider PYTHON PYTHON core feature since Version from February
 Languages influenced by Python Pythons design PYTHON philosophy have influenced many other
 programming languages Boo uses indentation PYTHON similar syntax PYTHON PYTHON similar object
 model Cobra uses indentation PYTHON PYTHON similar syntax PYTHON its Acknowledgements document
 lists Python first among languages that influenced it CoffeeScript PYTHON programming language
 that crosscompiles PYTHON JavaScript has Pythoninspired syntax ECMAScriptJavaScript borrowed
 iterators PYTHON generators from Python GDScript PYTHON scripting language very similar PYTHON
 Python builtin PYTHON PYTHON Godot game engine Go PYTHON designed PYTHON PYTHON speed PYTHON
 working PYTHON PYTHON dynamic language like Python PYTHON shares PYTHON same syntax PYTHON slicing
 arrays Groovy was motivated by PYTHON desire PYTHON bring PYTHON Python design philosophy PYTHON
 Java Julia was designed PYTHON be PYTHON usable PYTHON general programming PYTHON Python Nim uses
 indentation PYTHON similar syntax Rubys creator Yukihiro Matsumoto has said I wanted PYTHON
 scripting language that was more powerful than Perl PYTHON more objectoriented than Python Thats
 why I decided PYTHON design my own language Swift PYTHON programming language developed by Apple
 has some Pythoninspired syntax Pythons development practices have also been emulated by other
 languages For example PYTHON practice PYTHON requiring PYTHON document describing PYTHON rationale
 PYTHON PYTHON issues surrounding PYTHON change PYTHON PYTHON language PYTHON Python PYTHON PEP
 PYTHON also used PYTHON Tcl Erlang PYTHON
